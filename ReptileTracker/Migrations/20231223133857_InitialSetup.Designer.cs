// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReptileTracker.EntityFramework;

#nullable disable

namespace ReptileTracker.Migrations
{
    [DbContext(typeof(ReptileContext))]
    [Migration("20231223133857_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReptileTracker.Account.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("ResetToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reset_token");

                    b.Property<DateTime>("ResetTokenExpiration")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expiration");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("account", "dbo");
                });

            modelBuilder.Entity("ReptileTracker.Animal.Model.Length", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Measure")
                        .HasColumnType("int")
                        .HasColumnName("measure");

                    b.Property<DateTime>("MeasurementDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("measurement_date");

                    b.Property<int>("ReptileId")
                        .HasColumnType("int")
                        .HasColumnName("reptile_id");

                    b.HasKey("Id");

                    b.ToTable("length", "dbo");
                });

            modelBuilder.Entity("ReptileTracker.Animal.Model.Reptile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("name");

                    b.Property<int>("ReptileType")
                        .HasColumnType("int")
                        .HasColumnName("reptile_type");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("species");

                    b.HasKey("Id");

                    b.ToTable("reptile", "dbo");
                });

            modelBuilder.Entity("ReptileTracker.Animal.Model.Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReptileId")
                        .HasColumnType("int")
                        .HasColumnName("reptile_id");

                    b.Property<int>("Weighing")
                        .HasColumnType("int")
                        .HasColumnName("weighing");

                    b.Property<DateTime>("WeighingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.ToTable("weight", "dbo");
                });

            modelBuilder.Entity("ReptileTracker.Feeding.Model.FeedingEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int>("FoodType")
                        .HasColumnType("int")
                        .HasColumnName("food_type");

                    b.Property<string>("Notes")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("notes");

                    b.Property<int>("ReptileId")
                        .HasColumnType("int")
                        .HasColumnName("reptile_id");

                    b.HasKey("Id");

                    b.ToTable("feeding_event", "dbo");
                });

            modelBuilder.Entity("ReptileTracker.Shedding.Model.SheddingEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int>("ReptileId")
                        .HasColumnType("int")
                        .HasColumnName("reptile_id");

                    b.HasKey("Id");

                    b.ToTable("shedding_event", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
